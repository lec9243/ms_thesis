Module 
		{moduleName = "<string>" ,
			 moduleSourceFileName = "<string>" ,
			 moduleDataLayout = Just (DataLayout 
			{endianness = LittleEndian ,
				 mangling = Just ELFMangling ,
				 stackAlignment = Just 128 ,
				 pointerLayouts = fromList [(AddrSpace 0 ,
				(64 ,
				AlignmentInfo 
				{abiAlignment = 64 ,
					 preferredAlignment = 64
					}))] ,
				 typeLayouts = fromList [((IntegerAlign ,
				1) ,
				AlignmentInfo 
				{abiAlignment = 8 ,
					 preferredAlignment = 8
					}) ,
				((IntegerAlign ,
				8) ,
				AlignmentInfo 
				{abiAlignment = 8 ,
					 preferredAlignment = 8
					}) ,
				((IntegerAlign ,
				16) ,
				AlignmentInfo 
				{abiAlignment = 16 ,
					 preferredAlignment = 16
					}) ,
				((IntegerAlign ,
				32) ,
				AlignmentInfo 
				{abiAlignment = 32 ,
					 preferredAlignment = 32
					}) ,
				((IntegerAlign ,
				64) ,
				AlignmentInfo 
				{abiAlignment = 64 ,
					 preferredAlignment = 64
					}) ,
				((VectorAlign ,
				64) ,
				AlignmentInfo 
				{abiAlignment = 64 ,
					 preferredAlignment = 64
					}) ,
				((VectorAlign ,
				128) ,
				AlignmentInfo 
				{abiAlignment = 128 ,
					 preferredAlignment = 128
					}) ,
				((FloatAlign ,
				16) ,
				AlignmentInfo 
				{abiAlignment = 16 ,
					 preferredAlignment = 16
					}) ,
				((FloatAlign ,
				32) ,
				AlignmentInfo 
				{abiAlignment = 32 ,
					 preferredAlignment = 32
					}) ,
				((FloatAlign ,
				64) ,
				AlignmentInfo 
				{abiAlignment = 64 ,
					 preferredAlignment = 64
					}) ,
				((FloatAlign ,
				80) ,
				AlignmentInfo 
				{abiAlignment = 128 ,
					 preferredAlignment = 128
					}) ,
				((FloatAlign ,
				128) ,
				AlignmentInfo 
				{abiAlignment = 128 ,
					 preferredAlignment = 128
					})] ,
				 aggregateLayout = AlignmentInfo 
				{abiAlignment = 0 ,
					 preferredAlignment = 64
					} ,
				 nativeSizes = Just (fromList [8 ,
				16 ,
				32 ,
				64])
				}) ,
			 moduleTargetTriple = Just "x86_64-unknown-linux" ,
			 moduleDefinitions = [TypeDefinition (Name "rB6_bytes_struct") (Just (StructureType 
			{isPacked = True ,
				 elementTypes = [ArrayType 
				{nArrayElements = 5 ,
					 elementType = IntegerType 
					{typeBits = 8
						}
					}]
				})) ,
			TypeDefinition (Name "rBc_closure_struct") (Just (StructureType 
			{isPacked = True ,
				 elementTypes = [IntegerType 
				{typeBits = 64
					} ,
				IntegerType 
				{typeBits = 64
					}]
				})) ,
			TypeDefinition (Name "rBd_bytes_struct") (Just (StructureType 
			{isPacked = True ,
				 elementTypes = [ArrayType 
				{nArrayElements = 5 ,
					 elementType = IntegerType 
					{typeBits = 8
						}
					}]
				})) ,
			TypeDefinition (Name "rBe_closure_struct") (Just (StructureType 
			{isPacked = True ,
				 elementTypes = [IntegerType 
				{typeBits = 64
					} ,
				IntegerType 
				{typeBits = 64
					}]
				})) ,
			TypeDefinition (Name "Main_zdtrModule_closure_struct") (Just (StructureType 
			{isPacked = True ,
				 elementTypes = [IntegerType 
				{typeBits = 64
					} ,
				IntegerType 
				{typeBits = 64
					} ,
				IntegerType 
				{typeBits = 64
					} ,
				IntegerType 
				{typeBits = 64
					}]
				})) ,
			TypeDefinition (Name "Main_main_closure_struct") (Just (StructureType 
			{isPacked = True ,
				 elementTypes = [IntegerType 
				{typeBits = 64
					} ,
				IntegerType 
				{typeBits = 64
					} ,
				IntegerType 
				{typeBits = 64
					} ,
				IntegerType 
				{typeBits = 64
					}]
				})) ,
			TypeDefinition (Name "_uIw_srt_struct") (Just (StructureType 
			{isPacked = True ,
				 elementTypes = [IntegerType 
				{typeBits = 64
					} ,
				IntegerType 
				{typeBits = 64
					} ,
				IntegerType 
				{typeBits = 64
					} ,
				IntegerType 
				{typeBits = 64
					}]
				})) ,
			TypeDefinition (Name "ZCMain_main_closure_struct") (Just (StructureType 
			{isPacked = True ,
				 elementTypes = [IntegerType 
				{typeBits = 64
					} ,
				IntegerType 
				{typeBits = 64
					} ,
				IntegerType 
				{typeBits = 64
					} ,
				IntegerType 
				{typeBits = 64
					}]
				})) ,
			GlobalDefinition (GlobalVariable 
			{name = Name "rB6_bytes$def" ,
				 linkage = Internal ,
				 visibility = Default ,
				 dllStorageClass = Nothing ,
				 threadLocalMode = Nothing ,
				 unnamedAddr = Nothing ,
				 isConstant = True ,
				 type' = NamedTypeReference (Name "rB6_bytes_struct") ,
				 addrSpace = AddrSpace 0 ,
				 initializer = Just (Struct 
				{structName = Just (Name "rB6_bytes_struct") ,
					 isPacked = True ,
					 memberValues = [Array 
					{memberType = IntegerType 
						{typeBits = 8
							} ,
						 memberValues = [Int 
						{integerBits = 8 ,
							 integerValue = 109
							} ,
						Int 
						{integerBits = 8 ,
							 integerValue = 97
							} ,
						Int 
						{integerBits = 8 ,
							 integerValue = 105
							} ,
						Int 
						{integerBits = 8 ,
							 integerValue = 110
							} ,
						Int 
						{integerBits = 8 ,
							 integerValue = 0
							}]
						}]
					}) ,
				 section = Nothing ,
				 comdat = Nothing ,
				 alignment = 1 ,
				 metadata = []
				}) ,
			GlobalDefinition (GlobalVariable 
			{name = Name "rBc_closure$def" ,
				 linkage = Internal ,
				 visibility = Default ,
				 dllStorageClass = Nothing ,
				 threadLocalMode = Nothing ,
				 unnamedAddr = Nothing ,
				 isConstant = False ,
				 type' = NamedTypeReference (Name "rBc_closure_struct") ,
				 addrSpace = AddrSpace 0 ,
				 initializer = Just (Struct 
				{structName = Just (Name "rBc_closure_struct") ,
					 isPacked = True ,
					 memberValues = [PtrToInt 
					{operand0 = GlobalReference (PointerType 
						{pointerReferent = IntegerType 
							{typeBits = 8
								} ,
							 pointerAddrSpace = AddrSpace 0
							}) (Name "ghczmprim_GHCziTypes_TrNameS_con_info") ,
						 type' = IntegerType 
						{typeBits = 64
							}
						} ,
					PtrToInt 
					{operand0 = GlobalReference (PointerType 
						{pointerReferent = NamedTypeReference (Name "rB6_bytes_struct") ,
							 pointerAddrSpace = AddrSpace 0
							}) (Name "rB6_bytes$def") ,
						 type' = IntegerType 
						{typeBits = 64
							}
						}]
					}) ,
				 section = Nothing ,
				 comdat = Nothing ,
				 alignment = 0 ,
				 metadata = []
				}) ,
			GlobalDefinition (GlobalVariable 
			{name = Name "rBd_bytes$def" ,
				 linkage = Internal ,
				 visibility = Default ,
				 dllStorageClass = Nothing ,
				 threadLocalMode = Nothing ,
				 unnamedAddr = Nothing ,
				 isConstant = True ,
				 type' = NamedTypeReference (Name "rBd_bytes_struct") ,
				 addrSpace = AddrSpace 0 ,
				 initializer = Just (Struct 
				{structName = Just (Name "rBd_bytes_struct") ,
					 isPacked = True ,
					 memberValues = [Array 
					{memberType = IntegerType 
						{typeBits = 8
							} ,
						 memberValues = [Int 
						{integerBits = 8 ,
							 integerValue = 77
							} ,
						Int 
						{integerBits = 8 ,
							 integerValue = 97
							} ,
						Int 
						{integerBits = 8 ,
							 integerValue = 105
							} ,
						Int 
						{integerBits = 8 ,
							 integerValue = 110
							} ,
						Int 
						{integerBits = 8 ,
							 integerValue = 0
							}]
						}]
					}) ,
				 section = Nothing ,
				 comdat = Nothing ,
				 alignment = 1 ,
				 metadata = []
				}) ,
			GlobalDefinition (GlobalVariable 
			{name = Name "rBe_closure$def" ,
				 linkage = Internal ,
				 visibility = Default ,
				 dllStorageClass = Nothing ,
				 threadLocalMode = Nothing ,
				 unnamedAddr = Nothing ,
				 isConstant = False ,
				 type' = NamedTypeReference (Name "rBe_closure_struct") ,
				 addrSpace = AddrSpace 0 ,
				 initializer = Just (Struct 
				{structName = Just (Name "rBe_closure_struct") ,
					 isPacked = True ,
					 memberValues = [PtrToInt 
					{operand0 = GlobalReference (PointerType 
						{pointerReferent = IntegerType 
							{typeBits = 8
								} ,
							 pointerAddrSpace = AddrSpace 0
							}) (Name "ghczmprim_GHCziTypes_TrNameS_con_info") ,
						 type' = IntegerType 
						{typeBits = 64
							}
						} ,
					PtrToInt 
					{operand0 = GlobalReference (PointerType 
						{pointerReferent = NamedTypeReference (Name "rBd_bytes_struct") ,
							 pointerAddrSpace = AddrSpace 0
							}) (Name "rBd_bytes$def") ,
						 type' = IntegerType 
						{typeBits = 64
							}
						}]
					}) ,
				 section = Nothing ,
				 comdat = Nothing ,
				 alignment = 0 ,
				 metadata = []
				}) ,
			GlobalDefinition (GlobalVariable 
			{name = Name "Main_zdtrModule_closure$def" ,
				 linkage = Internal ,
				 visibility = Default ,
				 dllStorageClass = Nothing ,
				 threadLocalMode = Nothing ,
				 unnamedAddr = Nothing ,
				 isConstant = False ,
				 type' = NamedTypeReference (Name "Main_zdtrModule_closure_struct") ,
				 addrSpace = AddrSpace 0 ,
				 initializer = Just (Struct 
				{structName = Just (Name "Main_zdtrModule_closure_struct") ,
					 isPacked = True ,
					 memberValues = [PtrToInt 
					{operand0 = GlobalReference (PointerType 
						{pointerReferent = IntegerType 
							{typeBits = 8
								} ,
							 pointerAddrSpace = AddrSpace 0
							}) (Name "ghczmprim_GHCziTypes_Module_con_info") ,
						 type' = IntegerType 
						{typeBits = 64
							}
						} ,
					Add 
					{nsw = False ,
						 nuw = False ,
						 operand0 = PtrToInt 
						{operand0 = GlobalReference (PointerType 
							{pointerReferent = NamedTypeReference (Name "rBc_closure_struct") ,
								 pointerAddrSpace = AddrSpace 0
								}) (Name "rBc_closure$def") ,
							 type' = IntegerType 
							{typeBits = 64
								}
							} ,
						 operand1 = Int 
						{integerBits = 64 ,
							 integerValue = 1
							}
						} ,
					Add 
					{nsw = False ,
						 nuw = False ,
						 operand0 = PtrToInt 
						{operand0 = GlobalReference (PointerType 
							{pointerReferent = NamedTypeReference (Name "rBe_closure_struct") ,
								 pointerAddrSpace = AddrSpace 0
								}) (Name "rBe_closure$def") ,
							 type' = IntegerType 
							{typeBits = 64
								}
							} ,
						 operand1 = Int 
						{integerBits = 64 ,
							 integerValue = 1
							}
						} ,
					Int 
					{integerBits = 64 ,
						 integerValue = 3
						}]
					}) ,
				 section = Nothing ,
				 comdat = Nothing ,
				 alignment = 0 ,
				 metadata = []
				}) ,
			GlobalDefinition (GlobalVariable 
			{name = Name "Main_main_closure$def" ,
				 linkage = Internal ,
				 visibility = Default ,
				 dllStorageClass = Nothing ,
				 threadLocalMode = Nothing ,
				 unnamedAddr = Nothing ,
				 isConstant = False ,
				 type' = NamedTypeReference (Name "Main_main_closure_struct") ,
				 addrSpace = AddrSpace 0 ,
				 initializer = Just (Struct 
				{structName = Just (Name "Main_main_closure_struct") ,
					 isPacked = True ,
					 memberValues = [PtrToInt 
					{operand0 = GlobalReference (PointerType 
						{pointerReferent = FunctionType 
							{resultType = VoidType ,
								 argumentTypes = [PointerType 
								{pointerReferent = IntegerType 
									{typeBits = 64
										} ,
									 pointerAddrSpace = AddrSpace 0
									} ,
								PointerType 
								{pointerReferent = IntegerType 
									{typeBits = 64
										} ,
									 pointerAddrSpace = AddrSpace 0
									} ,
								PointerType 
								{pointerReferent = IntegerType 
									{typeBits = 64
										} ,
									 pointerAddrSpace = AddrSpace 0
									} ,
								IntegerType 
								{typeBits = 64
									} ,
								IntegerType 
								{typeBits = 64
									} ,
								IntegerType 
								{typeBits = 64
									} ,
								IntegerType 
								{typeBits = 64
									} ,
								IntegerType 
								{typeBits = 64
									} ,
								IntegerType 
								{typeBits = 64
									} ,
								IntegerType 
								{typeBits = 64
									}] ,
								 isVarArg = False
								} ,
							 pointerAddrSpace = AddrSpace 0
							}) (Name "Main_main_info$def") ,
						 type' = IntegerType 
						{typeBits = 64
							}
						} ,
					Int 
					{integerBits = 64 ,
						 integerValue = 0
						} ,
					Int 
					{integerBits = 64 ,
						 integerValue = 0
						} ,
					Int 
					{integerBits = 64 ,
						 integerValue = 0
						}]
					}) ,
				 section = Nothing ,
				 comdat = Nothing ,
				 alignment = 0 ,
				 metadata = []
				}) ,
			GlobalDefinition (GlobalVariable 
			{name = Name "_uIw_srt$def" ,
				 linkage = Internal ,
				 visibility = Default ,
				 dllStorageClass = Nothing ,
				 threadLocalMode = Nothing ,
				 unnamedAddr = Nothing ,
				 isConstant = False ,
				 type' = NamedTypeReference (Name "_uIw_srt_struct") ,
				 addrSpace = AddrSpace 0 ,
				 initializer = Just (Struct 
				{structName = Just (Name "_uIw_srt_struct") ,
					 isPacked = True ,
					 memberValues = [PtrToInt 
					{operand0 = GlobalReference (PointerType 
						{pointerReferent = IntegerType 
							{typeBits = 8
								} ,
							 pointerAddrSpace = AddrSpace 0
							}) (Name "stg_SRT_2_info") ,
						 type' = IntegerType 
						{typeBits = 64
							}
						} ,
					PtrToInt 
					{operand0 = GlobalReference (PointerType 
						{pointerReferent = IntegerType 
							{typeBits = 8
								} ,
							 pointerAddrSpace = AddrSpace 0
							}) (Name "base_GHCziTopHandler_runMainIO_closure") ,
						 type' = IntegerType 
						{typeBits = 64
							}
						} ,
					PtrToInt 
					{operand0 = GlobalReference (PointerType 
						{pointerReferent = NamedTypeReference (Name "Main_main_closure_struct") ,
							 pointerAddrSpace = AddrSpace 0
							}) (Name "Main_main_closure$def") ,
						 type' = IntegerType 
						{typeBits = 64
							}
						} ,
					Int 
					{integerBits = 64 ,
						 integerValue = 0
						}]
					}) ,
				 section = Nothing ,
				 comdat = Nothing ,
				 alignment = 0 ,
				 metadata = []
				}) ,
			GlobalDefinition (GlobalVariable 
			{name = Name "ZCMain_main_closure$def" ,
				 linkage = Internal ,
				 visibility = Default ,
				 dllStorageClass = Nothing ,
				 threadLocalMode = Nothing ,
				 unnamedAddr = Nothing ,
				 isConstant = False ,
				 type' = NamedTypeReference (Name "ZCMain_main_closure_struct") ,
				 addrSpace = AddrSpace 0 ,
				 initializer = Just (Struct 
				{structName = Just (Name "ZCMain_main_closure_struct") ,
					 isPacked = True ,
					 memberValues = [PtrToInt 
					{operand0 = GlobalReference (PointerType 
						{pointerReferent = FunctionType 
							{resultType = VoidType ,
								 argumentTypes = [PointerType 
								{pointerReferent = IntegerType 
									{typeBits = 64
										} ,
									 pointerAddrSpace = AddrSpace 0
									} ,
								PointerType 
								{pointerReferent = IntegerType 
									{typeBits = 64
										} ,
									 pointerAddrSpace = AddrSpace 0
									} ,
								PointerType 
								{pointerReferent = IntegerType 
									{typeBits = 64
										} ,
									 pointerAddrSpace = AddrSpace 0
									} ,
								IntegerType 
								{typeBits = 64
									} ,
								IntegerType 
								{typeBits = 64
									} ,
								IntegerType 
								{typeBits = 64
									} ,
								IntegerType 
								{typeBits = 64
									} ,
								IntegerType 
								{typeBits = 64
									} ,
								IntegerType 
								{typeBits = 64
									} ,
								IntegerType 
								{typeBits = 64
									}] ,
								 isVarArg = False
								} ,
							 pointerAddrSpace = AddrSpace 0
							}) (Name "ZCMain_main_info$def") ,
						 type' = IntegerType 
						{typeBits = 64
							}
						} ,
					Int 
					{integerBits = 64 ,
						 integerValue = 0
						} ,
					Int 
					{integerBits = 64 ,
						 integerValue = 0
						} ,
					Int 
					{integerBits = 64 ,
						 integerValue = 0
						}]
					}) ,
				 section = Nothing ,
				 comdat = Nothing ,
				 alignment = 0 ,
				 metadata = []
				}) ,
			GlobalDefinition (GlobalVariable 
			{name = Name "ghczmprim_GHCziTypes_TrNameS_con_info" ,
				 linkage = External ,
				 visibility = Default ,
				 dllStorageClass = Nothing ,
				 threadLocalMode = Nothing ,
				 unnamedAddr = Nothing ,
				 isConstant = False ,
				 type' = IntegerType 
				{typeBits = 8
					} ,
				 addrSpace = AddrSpace 0 ,
				 initializer = Nothing ,
				 section = Nothing ,
				 comdat = Nothing ,
				 alignment = 0 ,
				 metadata = []
				}) ,
			GlobalDefinition (GlobalVariable 
			{name = Name "ghczmprim_GHCziTypes_Module_con_info" ,
				 linkage = External ,
				 visibility = Default ,
				 dllStorageClass = Nothing ,
				 threadLocalMode = Nothing ,
				 unnamedAddr = Nothing ,
				 isConstant = False ,
				 type' = IntegerType 
				{typeBits = 8
					} ,
				 addrSpace = AddrSpace 0 ,
				 initializer = Nothing ,
				 section = Nothing ,
				 comdat = Nothing ,
				 alignment = 0 ,
				 metadata = []
				}) ,
			GlobalDefinition (GlobalVariable 
			{name = Name "newCAF" ,
				 linkage = External ,
				 visibility = Default ,
				 dllStorageClass = Nothing ,
				 threadLocalMode = Nothing ,
				 unnamedAddr = Nothing ,
				 isConstant = False ,
				 type' = IntegerType 
				{typeBits = 8
					} ,
				 addrSpace = AddrSpace 0 ,
				 initializer = Nothing ,
				 section = Nothing ,
				 comdat = Nothing ,
				 alignment = 0 ,
				 metadata = []
				}) ,
			GlobalDefinition (GlobalVariable 
			{name = Name "stg_bh_upd_frame_info" ,
				 linkage = External ,
				 visibility = Default ,
				 dllStorageClass = Nothing ,
				 threadLocalMode = Nothing ,
				 unnamedAddr = Nothing ,
				 isConstant = False ,
				 type' = IntegerType 
				{typeBits = 8
					} ,
				 addrSpace = AddrSpace 0 ,
				 initializer = Nothing ,
				 section = Nothing ,
				 comdat = Nothing ,
				 alignment = 0 ,
				 metadata = []
				}) ,
			GlobalDefinition (GlobalVariable 
			{name = Name "base_GHCziBase_zdfMonadIO_closure" ,
				 linkage = External ,
				 visibility = Default ,
				 dllStorageClass = Nothing ,
				 threadLocalMode = Nothing ,
				 unnamedAddr = Nothing ,
				 isConstant = False ,
				 type' = IntegerType 
				{typeBits = 8
					} ,
				 addrSpace = AddrSpace 0 ,
				 initializer = Nothing ,
				 section = Nothing ,
				 comdat = Nothing ,
				 alignment = 0 ,
				 metadata = []
				}) ,
			GlobalDefinition (GlobalVariable 
			{name = Name "stg_ap_p_info" ,
				 linkage = External ,
				 visibility = Default ,
				 dllStorageClass = Nothing ,
				 threadLocalMode = Nothing ,
				 unnamedAddr = Nothing ,
				 isConstant = False ,
				 type' = IntegerType 
				{typeBits = 8
					} ,
				 addrSpace = AddrSpace 0 ,
				 initializer = Nothing ,
				 section = Nothing ,
				 comdat = Nothing ,
				 alignment = 0 ,
				 metadata = []
				}) ,
			GlobalDefinition (GlobalVariable 
			{name = Name "ghczmprim_GHCziTuple_Z0T_closure" ,
				 linkage = External ,
				 visibility = Default ,
				 dllStorageClass = Nothing ,
				 threadLocalMode = Nothing ,
				 unnamedAddr = Nothing ,
				 isConstant = False ,
				 type' = IntegerType 
				{typeBits = 8
					} ,
				 addrSpace = AddrSpace 0 ,
				 initializer = Nothing ,
				 section = Nothing ,
				 comdat = Nothing ,
				 alignment = 0 ,
				 metadata = []
				}) ,
			GlobalDefinition (GlobalVariable 
			{name = Name "base_GHCziBase_return_info" ,
				 linkage = External ,
				 visibility = Default ,
				 dllStorageClass = Nothing ,
				 threadLocalMode = Nothing ,
				 unnamedAddr = Nothing ,
				 isConstant = False ,
				 type' = IntegerType 
				{typeBits = 8
					} ,
				 addrSpace = AddrSpace 0 ,
				 initializer = Nothing ,
				 section = Nothing ,
				 comdat = Nothing ,
				 alignment = 0 ,
				 metadata = []
				}) ,
			GlobalDefinition (GlobalVariable 
			{name = Name "stg_SRT_2_info" ,
				 linkage = External ,
				 visibility = Default ,
				 dllStorageClass = Nothing ,
				 threadLocalMode = Nothing ,
				 unnamedAddr = Nothing ,
				 isConstant = False ,
				 type' = IntegerType 
				{typeBits = 8
					} ,
				 addrSpace = AddrSpace 0 ,
				 initializer = Nothing ,
				 section = Nothing ,
				 comdat = Nothing ,
				 alignment = 0 ,
				 metadata = []
				}) ,
			GlobalDefinition (GlobalVariable 
			{name = Name "base_GHCziTopHandler_runMainIO_closure" ,
				 linkage = External ,
				 visibility = Default ,
				 dllStorageClass = Nothing ,
				 threadLocalMode = Nothing ,
				 unnamedAddr = Nothing ,
				 isConstant = False ,
				 type' = IntegerType 
				{typeBits = 8
					} ,
				 addrSpace = AddrSpace 0 ,
				 initializer = Nothing ,
				 section = Nothing ,
				 comdat = Nothing ,
				 alignment = 0 ,
				 metadata = []
				}) ,
			GlobalDefinition (GlobalVariable 
			{name = Name "stg_ap_p_fast" ,
				 linkage = External ,
				 visibility = Default ,
				 dllStorageClass = Nothing ,
				 threadLocalMode = Nothing ,
				 unnamedAddr = Nothing ,
				 isConstant = False ,
				 type' = IntegerType 
				{typeBits = 8
					} ,
				 addrSpace = AddrSpace 0 ,
				 initializer = Nothing ,
				 section = Nothing ,
				 comdat = Nothing ,
				 alignment = 0 ,
				 metadata = []
				}) ,
			GlobalDefinition (GlobalVariable 
			{name = Name "llvm.used" ,
				 linkage = Appending ,
				 visibility = Default ,
				 dllStorageClass = Nothing ,
				 threadLocalMode = Nothing ,
				 unnamedAddr = Nothing ,
				 isConstant = True ,
				 type' = ArrayType 
				{nArrayElements = 8 ,
					 elementType = PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 8
							} ,
						 pointerAddrSpace = AddrSpace 0
						}
					} ,
				 addrSpace = AddrSpace 0 ,
				 initializer = Just (Array 
				{memberType = PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 8
							} ,
						 pointerAddrSpace = AddrSpace 0
						} ,
					 memberValues = [BitCast 
					{operand0 = GlobalReference (PointerType 
						{pointerReferent = NamedTypeReference (Name "ZCMain_main_closure_struct") ,
							 pointerAddrSpace = AddrSpace 0
							}) (Name "ZCMain_main_closure$def") ,
						 type' = PointerType 
						{pointerReferent = IntegerType 
							{typeBits = 8
								} ,
							 pointerAddrSpace = AddrSpace 0
							}
						} ,
					BitCast 
					{operand0 = GlobalReference (PointerType 
						{pointerReferent = NamedTypeReference (Name "_uIw_srt_struct") ,
							 pointerAddrSpace = AddrSpace 0
							}) (Name "_uIw_srt$def") ,
						 type' = PointerType 
						{pointerReferent = IntegerType 
							{typeBits = 8
								} ,
							 pointerAddrSpace = AddrSpace 0
							}
						} ,
					BitCast 
					{operand0 = GlobalReference (PointerType 
						{pointerReferent = NamedTypeReference (Name "Main_main_closure_struct") ,
							 pointerAddrSpace = AddrSpace 0
							}) (Name "Main_main_closure$def") ,
						 type' = PointerType 
						{pointerReferent = IntegerType 
							{typeBits = 8
								} ,
							 pointerAddrSpace = AddrSpace 0
							}
						} ,
					BitCast 
					{operand0 = GlobalReference (PointerType 
						{pointerReferent = NamedTypeReference (Name "Main_zdtrModule_closure_struct") ,
							 pointerAddrSpace = AddrSpace 0
							}) (Name "Main_zdtrModule_closure$def") ,
						 type' = PointerType 
						{pointerReferent = IntegerType 
							{typeBits = 8
								} ,
							 pointerAddrSpace = AddrSpace 0
							}
						} ,
					BitCast 
					{operand0 = GlobalReference (PointerType 
						{pointerReferent = NamedTypeReference (Name "rBe_closure_struct") ,
							 pointerAddrSpace = AddrSpace 0
							}) (Name "rBe_closure$def") ,
						 type' = PointerType 
						{pointerReferent = IntegerType 
							{typeBits = 8
								} ,
							 pointerAddrSpace = AddrSpace 0
							}
						} ,
					GetElementPtr 
					{inBounds = True ,
						 address = GlobalReference (PointerType 
						{pointerReferent = NamedTypeReference (Name "rBd_bytes_struct") ,
							 pointerAddrSpace = AddrSpace 0
							}) (Name "rBd_bytes$def") ,
						 indices = [Int 
						{integerBits = 32 ,
							 integerValue = 0
							} ,
						Int 
						{integerBits = 32 ,
							 integerValue = 0
							} ,
						Int 
						{integerBits = 32 ,
							 integerValue = 0
							}]
						} ,
					BitCast 
					{operand0 = GlobalReference (PointerType 
						{pointerReferent = NamedTypeReference (Name "rBc_closure_struct") ,
							 pointerAddrSpace = AddrSpace 0
							}) (Name "rBc_closure$def") ,
						 type' = PointerType 
						{pointerReferent = IntegerType 
							{typeBits = 8
								} ,
							 pointerAddrSpace = AddrSpace 0
							}
						} ,
					GetElementPtr 
					{inBounds = True ,
						 address = GlobalReference (PointerType 
						{pointerReferent = NamedTypeReference (Name "rB6_bytes_struct") ,
							 pointerAddrSpace = AddrSpace 0
							}) (Name "rB6_bytes$def") ,
						 indices = [Int 
						{integerBits = 32 ,
							 integerValue = 0
							} ,
						Int 
						{integerBits = 32 ,
							 integerValue = 0
							} ,
						Int 
						{integerBits = 32 ,
							 integerValue = 0
							}]
						}]
					}) ,
				 section = Just "llvm.metadata" ,
				 comdat = Nothing ,
				 alignment = 0 ,
				 metadata = []
				}) ,
			GlobalDefinition (GlobalAlias 
			{name = Name "rB6_bytes" ,
				 linkage = Internal ,
				 visibility = Default ,
				 dllStorageClass = Nothing ,
				 threadLocalMode = Nothing ,
				 unnamedAddr = Nothing ,
				 type' = IntegerType 
				{typeBits = 8
					} ,
				 addrSpace = AddrSpace 0 ,
				 aliasee = GetElementPtr 
				{inBounds = True ,
					 address = GlobalReference (PointerType 
					{pointerReferent = NamedTypeReference (Name "rB6_bytes_struct") ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "rB6_bytes$def") ,
					 indices = [Int 
					{integerBits = 32 ,
						 integerValue = 0
						} ,
					Int 
					{integerBits = 32 ,
						 integerValue = 0
						} ,
					Int 
					{integerBits = 32 ,
						 integerValue = 0
						}]
					}
				}) ,
			GlobalDefinition (GlobalAlias 
			{name = Name "rBc_closure" ,
				 linkage = Internal ,
				 visibility = Default ,
				 dllStorageClass = Nothing ,
				 threadLocalMode = Nothing ,
				 unnamedAddr = Nothing ,
				 type' = IntegerType 
				{typeBits = 8
					} ,
				 addrSpace = AddrSpace 0 ,
				 aliasee = BitCast 
				{operand0 = GlobalReference (PointerType 
					{pointerReferent = NamedTypeReference (Name "rBc_closure_struct") ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "rBc_closure$def") ,
					 type' = PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 8
							} ,
						 pointerAddrSpace = AddrSpace 0
						}
					}
				}) ,
			GlobalDefinition (GlobalAlias 
			{name = Name "rBd_bytes" ,
				 linkage = Internal ,
				 visibility = Default ,
				 dllStorageClass = Nothing ,
				 threadLocalMode = Nothing ,
				 unnamedAddr = Nothing ,
				 type' = IntegerType 
				{typeBits = 8
					} ,
				 addrSpace = AddrSpace 0 ,
				 aliasee = GetElementPtr 
				{inBounds = True ,
					 address = GlobalReference (PointerType 
					{pointerReferent = NamedTypeReference (Name "rBd_bytes_struct") ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "rBd_bytes$def") ,
					 indices = [Int 
					{integerBits = 32 ,
						 integerValue = 0
						} ,
					Int 
					{integerBits = 32 ,
						 integerValue = 0
						} ,
					Int 
					{integerBits = 32 ,
						 integerValue = 0
						}]
					}
				}) ,
			GlobalDefinition (GlobalAlias 
			{name = Name "rBe_closure" ,
				 linkage = Internal ,
				 visibility = Default ,
				 dllStorageClass = Nothing ,
				 threadLocalMode = Nothing ,
				 unnamedAddr = Nothing ,
				 type' = IntegerType 
				{typeBits = 8
					} ,
				 addrSpace = AddrSpace 0 ,
				 aliasee = BitCast 
				{operand0 = GlobalReference (PointerType 
					{pointerReferent = NamedTypeReference (Name "rBe_closure_struct") ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "rBe_closure$def") ,
					 type' = PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 8
							} ,
						 pointerAddrSpace = AddrSpace 0
						}
					}
				}) ,
			GlobalDefinition (GlobalAlias 
			{name = Name "Main_zdtrModule_closure" ,
				 linkage = External ,
				 visibility = Default ,
				 dllStorageClass = Nothing ,
				 threadLocalMode = Nothing ,
				 unnamedAddr = Nothing ,
				 type' = IntegerType 
				{typeBits = 8
					} ,
				 addrSpace = AddrSpace 0 ,
				 aliasee = BitCast 
				{operand0 = GlobalReference (PointerType 
					{pointerReferent = NamedTypeReference (Name "Main_zdtrModule_closure_struct") ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "Main_zdtrModule_closure$def") ,
					 type' = PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 8
							} ,
						 pointerAddrSpace = AddrSpace 0
						}
					}
				}) ,
			GlobalDefinition (GlobalAlias 
			{name = Name "Main_main_closure" ,
				 linkage = External ,
				 visibility = Default ,
				 dllStorageClass = Nothing ,
				 threadLocalMode = Nothing ,
				 unnamedAddr = Nothing ,
				 type' = IntegerType 
				{typeBits = 8
					} ,
				 addrSpace = AddrSpace 0 ,
				 aliasee = BitCast 
				{operand0 = GlobalReference (PointerType 
					{pointerReferent = NamedTypeReference (Name "Main_main_closure_struct") ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "Main_main_closure$def") ,
					 type' = PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 8
							} ,
						 pointerAddrSpace = AddrSpace 0
						}
					}
				}) ,
			GlobalDefinition (GlobalAlias 
			{name = Name "Main_main_info" ,
				 linkage = External ,
				 visibility = Default ,
				 dllStorageClass = Nothing ,
				 threadLocalMode = Nothing ,
				 unnamedAddr = Nothing ,
				 type' = IntegerType 
				{typeBits = 8
					} ,
				 addrSpace = AddrSpace 0 ,
				 aliasee = BitCast 
				{operand0 = GlobalReference (PointerType 
					{pointerReferent = FunctionType 
						{resultType = VoidType ,
							 argumentTypes = [PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 64
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 64
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 64
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								}] ,
							 isVarArg = False
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "Main_main_info$def") ,
					 type' = PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 8
							} ,
						 pointerAddrSpace = AddrSpace 0
						}
					}
				}) ,
			GlobalDefinition (GlobalAlias 
			{name = Name "_uIw_srt" ,
				 linkage = Internal ,
				 visibility = Default ,
				 dllStorageClass = Nothing ,
				 threadLocalMode = Nothing ,
				 unnamedAddr = Nothing ,
				 type' = IntegerType 
				{typeBits = 8
					} ,
				 addrSpace = AddrSpace 0 ,
				 aliasee = BitCast 
				{operand0 = GlobalReference (PointerType 
					{pointerReferent = NamedTypeReference (Name "_uIw_srt_struct") ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "_uIw_srt$def") ,
					 type' = PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 8
							} ,
						 pointerAddrSpace = AddrSpace 0
						}
					}
				}) ,
			GlobalDefinition (GlobalAlias 
			{name = Name "ZCMain_main_closure" ,
				 linkage = External ,
				 visibility = Default ,
				 dllStorageClass = Nothing ,
				 threadLocalMode = Nothing ,
				 unnamedAddr = Nothing ,
				 type' = IntegerType 
				{typeBits = 8
					} ,
				 addrSpace = AddrSpace 0 ,
				 aliasee = BitCast 
				{operand0 = GlobalReference (PointerType 
					{pointerReferent = NamedTypeReference (Name "ZCMain_main_closure_struct") ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "ZCMain_main_closure$def") ,
					 type' = PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 8
							} ,
						 pointerAddrSpace = AddrSpace 0
						}
					}
				}) ,
			GlobalDefinition (GlobalAlias 
			{name = Name "ZCMain_main_info" ,
				 linkage = External ,
				 visibility = Default ,
				 dllStorageClass = Nothing ,
				 threadLocalMode = Nothing ,
				 unnamedAddr = Nothing ,
				 type' = IntegerType 
				{typeBits = 8
					} ,
				 addrSpace = AddrSpace 0 ,
				 aliasee = BitCast 
				{operand0 = GlobalReference (PointerType 
					{pointerReferent = FunctionType 
						{resultType = VoidType ,
							 argumentTypes = [PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 64
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 64
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 64
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								}] ,
							 isVarArg = False
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "ZCMain_main_info$def") ,
					 type' = PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 8
							} ,
						 pointerAddrSpace = AddrSpace 0
						}
					}
				}) ,
			GlobalDefinition (Function 
			{linkage = External ,
				 visibility = Default ,
				 dllStorageClass = Nothing ,
				 callingConvention = C ,
				 returnAttributes = [] ,
				 returnType = PointerType 
				{pointerReferent = IntegerType 
					{typeBits = 8
						} ,
					 pointerAddrSpace = AddrSpace 0
					} ,
				 name = Name "memcpy$def" ,
				 parameters = ([Parameter (PointerType 
				{pointerReferent = IntegerType 
					{typeBits = 8
						} ,
					 pointerAddrSpace = AddrSpace 0
					}) (UnName 0) [] ,
				Parameter (PointerType 
				{pointerReferent = IntegerType 
					{typeBits = 8
						} ,
					 pointerAddrSpace = AddrSpace 0
					}) (UnName 1) [] ,
				Parameter (IntegerType 
				{typeBits = 64
					}) (UnName 2) []] ,
				False) ,
				 functionAttributes = [] ,
				 section = Nothing ,
				 comdat = Nothing ,
				 alignment = 0 ,
				 garbageCollectorName = Nothing ,
				 prefix = Nothing ,
				 basicBlocks = [] ,
				 personalityFunction = Nothing ,
				 metadata = []
				}) ,
			GlobalDefinition (Function 
			{linkage = External ,
				 visibility = Default ,
				 dllStorageClass = Nothing ,
				 callingConvention = C ,
				 returnAttributes = [] ,
				 returnType = PointerType 
				{pointerReferent = IntegerType 
					{typeBits = 8
						} ,
					 pointerAddrSpace = AddrSpace 0
					} ,
				 name = Name "memmove$def" ,
				 parameters = ([Parameter (PointerType 
				{pointerReferent = IntegerType 
					{typeBits = 8
						} ,
					 pointerAddrSpace = AddrSpace 0
					}) (UnName 0) [] ,
				Parameter (PointerType 
				{pointerReferent = IntegerType 
					{typeBits = 8
						} ,
					 pointerAddrSpace = AddrSpace 0
					}) (UnName 1) [] ,
				Parameter (IntegerType 
				{typeBits = 64
					}) (UnName 2) []] ,
				False) ,
				 functionAttributes = [] ,
				 section = Nothing ,
				 comdat = Nothing ,
				 alignment = 0 ,
				 garbageCollectorName = Nothing ,
				 prefix = Nothing ,
				 basicBlocks = [] ,
				 personalityFunction = Nothing ,
				 metadata = []
				}) ,
			GlobalDefinition (Function 
			{linkage = External ,
				 visibility = Default ,
				 dllStorageClass = Nothing ,
				 callingConvention = C ,
				 returnAttributes = [] ,
				 returnType = PointerType 
				{pointerReferent = IntegerType 
					{typeBits = 8
						} ,
					 pointerAddrSpace = AddrSpace 0
					} ,
				 name = Name "memset$def" ,
				 parameters = ([Parameter (PointerType 
				{pointerReferent = IntegerType 
					{typeBits = 8
						} ,
					 pointerAddrSpace = AddrSpace 0
					}) (UnName 0) [] ,
				Parameter (IntegerType 
				{typeBits = 64
					}) (UnName 1) [] ,
				Parameter (IntegerType 
				{typeBits = 64
					}) (UnName 2) []] ,
				False) ,
				 functionAttributes = [] ,
				 section = Nothing ,
				 comdat = Nothing ,
				 alignment = 0 ,
				 garbageCollectorName = Nothing ,
				 prefix = Nothing ,
				 basicBlocks = [] ,
				 personalityFunction = Nothing ,
				 metadata = []
				}) ,
			GlobalDefinition (Function 
			{linkage = External ,
				 visibility = Default ,
				 dllStorageClass = Nothing ,
				 callingConvention = C ,
				 returnAttributes = [] ,
				 returnType = IntegerType 
				{typeBits = 64
					} ,
				 name = Name "newSpark$def" ,
				 parameters = ([Parameter (PointerType 
				{pointerReferent = IntegerType 
					{typeBits = 8
						} ,
					 pointerAddrSpace = AddrSpace 0
					}) (UnName 0) [] ,
				Parameter (PointerType 
				{pointerReferent = IntegerType 
					{typeBits = 8
						} ,
					 pointerAddrSpace = AddrSpace 0
					}) (UnName 1) []] ,
				False) ,
				 functionAttributes = [] ,
				 section = Nothing ,
				 comdat = Nothing ,
				 alignment = 0 ,
				 garbageCollectorName = Nothing ,
				 prefix = Nothing ,
				 basicBlocks = [] ,
				 personalityFunction = Nothing ,
				 metadata = []
				}) ,
			GlobalDefinition (Function 
			{linkage = External ,
				 visibility = Default ,
				 dllStorageClass = Nothing ,
				 callingConvention = GHC ,
				 returnAttributes = [] ,
				 returnType = VoidType ,
				 name = Name "Main_main_info$def" ,
				 parameters = ([Parameter (PointerType 
				{pointerReferent = IntegerType 
					{typeBits = 64
						} ,
					 pointerAddrSpace = AddrSpace 0
					}) (Name "Base_Arg") [NoAlias ,
				NoCapture] ,
				Parameter (PointerType 
				{pointerReferent = IntegerType 
					{typeBits = 64
						} ,
					 pointerAddrSpace = AddrSpace 0
					}) (Name "Sp_Arg") [NoAlias ,
				NoCapture] ,
				Parameter (PointerType 
				{pointerReferent = IntegerType 
					{typeBits = 64
						} ,
					 pointerAddrSpace = AddrSpace 0
					}) (Name "Hp_Arg") [NoAlias ,
				NoCapture] ,
				Parameter (IntegerType 
				{typeBits = 64
					}) (Name "R1_Arg") [] ,
				Parameter (IntegerType 
				{typeBits = 64
					}) (Name "R2_Arg") [] ,
				Parameter (IntegerType 
				{typeBits = 64
					}) (Name "R3_Arg") [] ,
				Parameter (IntegerType 
				{typeBits = 64
					}) (Name "R4_Arg") [] ,
				Parameter (IntegerType 
				{typeBits = 64
					}) (Name "R5_Arg") [] ,
				Parameter (IntegerType 
				{typeBits = 64
					}) (Name "R6_Arg") [] ,
				Parameter (IntegerType 
				{typeBits = 64
					}) (Name "SpLim_Arg") []] ,
				False) ,
				 functionAttributes = [Left (GroupID 0)] ,
				 section = Nothing ,
				 comdat = Nothing ,
				 alignment = 8 ,
				 garbageCollectorName = Nothing ,
				 prefix = Just (Struct 
				{structName = Nothing ,
					 isPacked = True ,
					 memberValues = [Int 
					{integerBits = 64 ,
						 integerValue = 0
						} ,
					Int 
					{integerBits = 32 ,
						 integerValue = 21
						} ,
					Trunc 
					{operand0 = Sub 
						{nsw = False ,
							 nuw = False ,
							 operand0 = PtrToInt 
							{operand0 = GlobalReference (PointerType 
								{pointerReferent = IntegerType 
									{typeBits = 8
										} ,
									 pointerAddrSpace = AddrSpace 0
									}) (Name "base_GHCziBase_zdfMonadIO_closure") ,
								 type' = IntegerType 
								{typeBits = 64
									}
								} ,
							 operand1 = PtrToInt 
							{operand0 = GlobalReference (PointerType 
								{pointerReferent = FunctionType 
									{resultType = VoidType ,
										 argumentTypes = [PointerType 
										{pointerReferent = IntegerType 
											{typeBits = 64
												} ,
											 pointerAddrSpace = AddrSpace 0
											} ,
										PointerType 
										{pointerReferent = IntegerType 
											{typeBits = 64
												} ,
											 pointerAddrSpace = AddrSpace 0
											} ,
										PointerType 
										{pointerReferent = IntegerType 
											{typeBits = 64
												} ,
											 pointerAddrSpace = AddrSpace 0
											} ,
										IntegerType 
										{typeBits = 64
											} ,
										IntegerType 
										{typeBits = 64
											} ,
										IntegerType 
										{typeBits = 64
											} ,
										IntegerType 
										{typeBits = 64
											} ,
										IntegerType 
										{typeBits = 64
											} ,
										IntegerType 
										{typeBits = 64
											} ,
										IntegerType 
										{typeBits = 64
											}] ,
										 isVarArg = False
										} ,
									 pointerAddrSpace = AddrSpace 0
									}) (Name "Main_main_info$def") ,
								 type' = IntegerType 
								{typeBits = 64
									}
								}
							} ,
						 type' = IntegerType 
						{typeBits = 32
							}
						}]
					}) ,
				 basicBlocks = [BasicBlock (Name "nHw") [Name "lrgc" := Alloca 
				{allocatedType = IntegerType 
					{typeBits = 64
						} ,
					 numElements = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Name "R3_Var" := Alloca 
				{allocatedType = IntegerType 
					{typeBits = 64
						} ,
					 numElements = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "R3_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = IntegerType 
						{typeBits = 64
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "R4_Var" := Alloca 
				{allocatedType = IntegerType 
					{typeBits = 64
						} ,
					 numElements = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "R4_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = IntegerType 
						{typeBits = 64
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "R5_Var" := Alloca 
				{allocatedType = IntegerType 
					{typeBits = 64
						} ,
					 numElements = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "R5_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = IntegerType 
						{typeBits = 64
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "R6_Var" := Alloca 
				{allocatedType = IntegerType 
					{typeBits = 64
						} ,
					 numElements = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "R6_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = IntegerType 
						{typeBits = 64
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "F1_Var" := Alloca 
				{allocatedType = FloatingPointType 
					{floatingPointType = FloatFP
						} ,
					 numElements = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = FloatFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "F1_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = FloatFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "D1_Var" := Alloca 
				{allocatedType = FloatingPointType 
					{floatingPointType = DoubleFP
						} ,
					 numElements = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = DoubleFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "D1_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = DoubleFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "F2_Var" := Alloca 
				{allocatedType = FloatingPointType 
					{floatingPointType = FloatFP
						} ,
					 numElements = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = FloatFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "F2_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = FloatFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "D2_Var" := Alloca 
				{allocatedType = FloatingPointType 
					{floatingPointType = DoubleFP
						} ,
					 numElements = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = DoubleFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "D2_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = DoubleFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "F3_Var" := Alloca 
				{allocatedType = FloatingPointType 
					{floatingPointType = FloatFP
						} ,
					 numElements = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = FloatFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "F3_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = FloatFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "D3_Var" := Alloca 
				{allocatedType = FloatingPointType 
					{floatingPointType = DoubleFP
						} ,
					 numElements = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = DoubleFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "D3_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = DoubleFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "F4_Var" := Alloca 
				{allocatedType = FloatingPointType 
					{floatingPointType = FloatFP
						} ,
					 numElements = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = FloatFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "F4_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = FloatFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "D4_Var" := Alloca 
				{allocatedType = FloatingPointType 
					{floatingPointType = DoubleFP
						} ,
					 numElements = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = DoubleFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "D4_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = DoubleFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "F5_Var" := Alloca 
				{allocatedType = FloatingPointType 
					{floatingPointType = FloatFP
						} ,
					 numElements = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = FloatFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "F5_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = FloatFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "D5_Var" := Alloca 
				{allocatedType = FloatingPointType 
					{floatingPointType = DoubleFP
						} ,
					 numElements = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = DoubleFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "D5_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = DoubleFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "F6_Var" := Alloca 
				{allocatedType = FloatingPointType 
					{floatingPointType = FloatFP
						} ,
					 numElements = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = FloatFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "F6_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = FloatFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "D6_Var" := Alloca 
				{allocatedType = FloatingPointType 
					{floatingPointType = DoubleFP
						} ,
					 numElements = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = DoubleFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "D6_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = DoubleFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "lcHq" := Alloca 
				{allocatedType = IntegerType 
					{typeBits = 64
						} ,
					 numElements = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Name "R2_Var" := Alloca 
				{allocatedType = IntegerType 
					{typeBits = 64
						} ,
					 numElements = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "R2_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = IntegerType 
						{typeBits = 64
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "Sp_Var" := Alloca 
				{allocatedType = PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						} ,
					 numElements = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = PointerType 
						{pointerReferent = IntegerType 
							{typeBits = 64
								} ,
							 pointerAddrSpace = AddrSpace 0
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "Sp_Var") ,
					 value = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "Sp_Arg") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "R1_Var" := Alloca 
				{allocatedType = IntegerType 
					{typeBits = 64
						} ,
					 numElements = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "R1_Var") ,
					 value = LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "R1_Arg") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					})] (Do (Br 
				{dest = Name "cHt" ,
					 metadata' = []
					})) ,
				BasicBlock (Name "cHt") [Name "lnHx" := Load 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "R1_Var") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lrgc") ,
					 value = LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "lnHx") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "lnHy" := Load 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = PointerType 
						{pointerReferent = IntegerType 
							{typeBits = 64
								} ,
							 pointerAddrSpace = AddrSpace 0
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "Sp_Var") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Name "lnHz" := GetElementPtr 
				{inBounds = True ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnHy") ,
					 indices = [ConstantOperand (Int 
					{integerBits = 32 ,
						 integerValue = 1
						})] ,
					 metadata = []
					} ,
				Name "lnHA" := PtrToInt 
				{operand0 = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnHz") ,
					 type' = IntegerType 
					{typeBits = 64
						} ,
					 metadata = []
					} ,
				Name "lnHB" := Sub 
				{nsw = False ,
					 nuw = False ,
					 operand0 = LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "lnHA") ,
					 operand1 = ConstantOperand (Int 
					{integerBits = 64 ,
						 integerValue = 40
						}) ,
					 metadata = []
					} ,
				Name "lnHC" := ICmp 
				{iPredicate = ULT ,
					 operand0 = LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "lnHB") ,
					 operand1 = LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "SpLim_Arg") ,
					 metadata = []
					} ,
				Name "lnHE" := Call 
				{tailCallKind = Nothing ,
					 callingConvention = C ,
					 returnAttributes = [] ,
					 function = Right (ConstantOperand (GlobalReference (PointerType 
					{pointerReferent = FunctionType 
						{resultType = IntegerType 
							{typeBits = 1
								} ,
							 argumentTypes = [IntegerType 
							{typeBits = 1
								} ,
							IntegerType 
							{typeBits = 1
								}] ,
							 isVarArg = False
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "llvm.expect.i1"))) ,
					 arguments = [(LocalReference (IntegerType 
					{typeBits = 1
						}) (Name "lnHC") ,
					[]) ,
					(ConstantOperand (Int 
					{integerBits = 1 ,
						 integerValue = 0
						}) ,
					[])] ,
					 functionAttributes = [] ,
					 metadata = []
					}] (Do (CondBr 
				{condition = LocalReference (IntegerType 
					{typeBits = 1
						}) (Name "lnHE") ,
					 trueDest = Name "cHu" ,
					 falseDest = Name "cHv" ,
					 metadata' = []
					})) ,
				BasicBlock (Name "cHv") [Name "lnHF" := PtrToInt 
				{operand0 = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "Base_Arg") ,
					 type' = IntegerType 
					{typeBits = 64
						} ,
					 metadata = []
					} ,
				Name "lnHG" := IntToPtr 
				{operand0 = LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "lnHF") ,
					 type' = PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 8
							} ,
						 pointerAddrSpace = AddrSpace 0
						} ,
					 metadata = []
					} ,
				Name "lnHH" := Load 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lrgc") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Name "lnHI" := IntToPtr 
				{operand0 = LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "lnHH") ,
					 type' = PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 8
							} ,
						 pointerAddrSpace = AddrSpace 0
						} ,
					 metadata = []
					} ,
				Name "lnHJ" := BitCast 
				{operand0 = ConstantOperand (GlobalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 8
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "newCAF")) ,
					 type' = PointerType 
					{pointerReferent = FunctionType 
						{resultType = PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 8
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							 argumentTypes = [PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 8
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 8
									} ,
								 pointerAddrSpace = AddrSpace 0
								}] ,
							 isVarArg = False
							} ,
						 pointerAddrSpace = AddrSpace 0
						} ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "R3_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = IntegerType 
						{typeBits = 64
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "R4_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = IntegerType 
						{typeBits = 64
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "R5_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = IntegerType 
						{typeBits = 64
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "R6_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = IntegerType 
						{typeBits = 64
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = FloatFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "F1_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = FloatFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = DoubleFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "D1_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = DoubleFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = FloatFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "F2_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = FloatFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = DoubleFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "D2_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = DoubleFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = FloatFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "F3_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = FloatFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = DoubleFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "D3_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = DoubleFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = FloatFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "F4_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = FloatFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = DoubleFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "D4_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = DoubleFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = FloatFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "F5_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = FloatFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = DoubleFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "D5_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = DoubleFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = FloatFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "F6_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = FloatFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = DoubleFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "D6_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = DoubleFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "lnHK" := Call 
				{tailCallKind = Nothing ,
					 callingConvention = C ,
					 returnAttributes = [] ,
					 function = Right (LocalReference (PointerType 
					{pointerReferent = FunctionType 
						{resultType = PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 8
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							 argumentTypes = [PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 8
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 8
									} ,
								 pointerAddrSpace = AddrSpace 0
								}] ,
							 isVarArg = False
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnHJ")) ,
					 arguments = [(LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 8
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnHG") ,
					[]) ,
					(LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 8
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnHI") ,
					[])] ,
					 functionAttributes = [Left (GroupID 0)] ,
					 metadata = []
					} ,
				Name "lnHL" := PtrToInt 
				{operand0 = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 8
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnHK") ,
					 type' = IntegerType 
					{typeBits = 64
						} ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lcHq") ,
					 value = LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "lnHL") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "lnHM" := Load 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lcHq") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Name "lnHN" := ICmp 
				{iPredicate = EQ ,
					 operand0 = LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "lnHM") ,
					 operand1 = ConstantOperand (Int 
					{integerBits = 64 ,
						 integerValue = 0
						}) ,
					 metadata = []
					}] (Do (CondBr 
				{condition = LocalReference (IntegerType 
					{typeBits = 1
						}) (Name "lnHN") ,
					 trueDest = Name "cHs" ,
					 falseDest = Name "cHr" ,
					 metadata' = []
					})) ,
				BasicBlock (Name "cHr") [Name "lnHP" := PtrToInt 
				{operand0 = ConstantOperand (GlobalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 8
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "stg_bh_upd_frame_info")) ,
					 type' = IntegerType 
					{typeBits = 64
						} ,
					 metadata = []
					} ,
				Name "lnHO" := Load 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = PointerType 
						{pointerReferent = IntegerType 
							{typeBits = 64
								} ,
							 pointerAddrSpace = AddrSpace 0
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "Sp_Var") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Name "lnHQ" := GetElementPtr 
				{inBounds = True ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnHO") ,
					 indices = [ConstantOperand (Int 
					{integerBits = 32 ,
						 integerValue = 4294967294
						})] ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnHQ") ,
					 value = LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "lnHP") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = [("tbaa" ,
					MDRef (MetadataNodeID 0))]
					}) ,
				Name "lnHS" := Load 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lcHq") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Name "lnHR" := Load 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = PointerType 
						{pointerReferent = IntegerType 
							{typeBits = 64
								} ,
							 pointerAddrSpace = AddrSpace 0
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "Sp_Var") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Name "lnHT" := GetElementPtr 
				{inBounds = True ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnHR") ,
					 indices = [ConstantOperand (Int 
					{integerBits = 32 ,
						 integerValue = 4294967295
						})] ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnHT") ,
					 value = LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "lnHS") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = [("tbaa" ,
					MDRef (MetadataNodeID 0))]
					}) ,
				Name "lnHU" := PtrToInt 
				{operand0 = ConstantOperand (GlobalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 8
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "base_GHCziBase_zdfMonadIO_closure")) ,
					 type' = IntegerType 
					{typeBits = 64
						} ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "R2_Var") ,
					 value = LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "lnHU") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "lnHW" := PtrToInt 
				{operand0 = ConstantOperand (GlobalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 8
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "stg_ap_p_info")) ,
					 type' = IntegerType 
					{typeBits = 64
						} ,
					 metadata = []
					} ,
				Name "lnHV" := Load 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = PointerType 
						{pointerReferent = IntegerType 
							{typeBits = 64
								} ,
							 pointerAddrSpace = AddrSpace 0
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "Sp_Var") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Name "lnHX" := GetElementPtr 
				{inBounds = True ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnHV") ,
					 indices = [ConstantOperand (Int 
					{integerBits = 32 ,
						 integerValue = 4294967292
						})] ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnHX") ,
					 value = LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "lnHW") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = [("tbaa" ,
					MDRef (MetadataNodeID 0))]
					}) ,
				Name "lnHZ" := PtrToInt 
				{operand0 = ConstantOperand (GlobalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 8
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "ghczmprim_GHCziTuple_Z0T_closure")) ,
					 type' = IntegerType 
					{typeBits = 64
						} ,
					 metadata = []
					} ,
				Name "lnI0" := Add 
				{nsw = False ,
					 nuw = False ,
					 operand0 = LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "lnHZ") ,
					 operand1 = ConstantOperand (Int 
					{integerBits = 64 ,
						 integerValue = 1
						}) ,
					 metadata = []
					} ,
				Name "lnHY" := Load 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = PointerType 
						{pointerReferent = IntegerType 
							{typeBits = 64
								} ,
							 pointerAddrSpace = AddrSpace 0
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "Sp_Var") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Name "lnI1" := GetElementPtr 
				{inBounds = True ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnHY") ,
					 indices = [ConstantOperand (Int 
					{integerBits = 32 ,
						 integerValue = 4294967293
						})] ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnI1") ,
					 value = LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "lnI0") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = [("tbaa" ,
					MDRef (MetadataNodeID 0))]
					}) ,
				Name "lnI2" := Load 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = PointerType 
						{pointerReferent = IntegerType 
							{typeBits = 64
								} ,
							 pointerAddrSpace = AddrSpace 0
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "Sp_Var") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Name "lnI3" := GetElementPtr 
				{inBounds = True ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnI2") ,
					 indices = [ConstantOperand (Int 
					{integerBits = 32 ,
						 integerValue = 4294967292
						})] ,
					 metadata = []
					} ,
				Name "lnI4" := PtrToInt 
				{operand0 = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnI3") ,
					 type' = IntegerType 
					{typeBits = 64
						} ,
					 metadata = []
					} ,
				Name "lnI5" := IntToPtr 
				{operand0 = LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "lnI4") ,
					 type' = PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						} ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = PointerType 
						{pointerReferent = IntegerType 
							{typeBits = 64
								} ,
							 pointerAddrSpace = AddrSpace 0
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "Sp_Var") ,
					 value = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnI5") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "lnI6" := BitCast 
				{operand0 = ConstantOperand (GlobalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 8
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "base_GHCziBase_return_info")) ,
					 type' = PointerType 
					{pointerReferent = FunctionType 
						{resultType = VoidType ,
							 argumentTypes = [PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 64
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 64
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 64
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								}] ,
							 isVarArg = False
							} ,
						 pointerAddrSpace = AddrSpace 0
						} ,
					 metadata = []
					} ,
				Name "lnI7" := Load 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = PointerType 
						{pointerReferent = IntegerType 
							{typeBits = 64
								} ,
							 pointerAddrSpace = AddrSpace 0
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "Sp_Var") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Name "lnI8" := Load 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "R1_Var") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Name "lnI9" := Load 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "R2_Var") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Call 
				{tailCallKind = Just Tail ,
					 callingConvention = GHC ,
					 returnAttributes = [] ,
					 function = Right (LocalReference (PointerType 
					{pointerReferent = FunctionType 
						{resultType = VoidType ,
							 argumentTypes = [PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 64
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 64
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 64
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								}] ,
							 isVarArg = False
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnI6")) ,
					 arguments = [(LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "Base_Arg") ,
					[]) ,
					(LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnI7") ,
					[]) ,
					(LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "Hp_Arg") ,
					[]) ,
					(LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "lnI8") ,
					[]) ,
					(LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "lnI9") ,
					[]) ,
					(ConstantOperand (Undef 
					{constantType = IntegerType 
						{typeBits = 64
							}
						}) ,
					[]) ,
					(ConstantOperand (Undef 
					{constantType = IntegerType 
						{typeBits = 64
							}
						}) ,
					[]) ,
					(ConstantOperand (Undef 
					{constantType = IntegerType 
						{typeBits = 64
							}
						}) ,
					[]) ,
					(ConstantOperand (Undef 
					{constantType = IntegerType 
						{typeBits = 64
							}
						}) ,
					[]) ,
					(LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "SpLim_Arg") ,
					[])] ,
					 functionAttributes = [Left (GroupID 0)] ,
					 metadata = []
					})] (Do (Ret 
				{returnOperand = Nothing ,
					 metadata' = []
					})) ,
				BasicBlock (Name "cHs") [Name "lnIa" := Load 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lrgc") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Name "lnIb" := IntToPtr 
				{operand0 = LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "lnIa") ,
					 type' = PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						} ,
					 metadata = []
					} ,
				Name "lnIc" := Load 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnIb") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = [("tbaa" ,
					MDRef (MetadataNodeID 1))]
					} ,
				Name "lnId" := IntToPtr 
				{operand0 = LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "lnIc") ,
					 type' = PointerType 
					{pointerReferent = FunctionType 
						{resultType = VoidType ,
							 argumentTypes = [PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 64
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 64
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 64
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								}] ,
							 isVarArg = False
							} ,
						 pointerAddrSpace = AddrSpace 0
						} ,
					 metadata = []
					} ,
				Name "lnIe" := Load 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = PointerType 
						{pointerReferent = IntegerType 
							{typeBits = 64
								} ,
							 pointerAddrSpace = AddrSpace 0
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "Sp_Var") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Name "lnIf" := Load 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "R1_Var") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Call 
				{tailCallKind = Just Tail ,
					 callingConvention = GHC ,
					 returnAttributes = [] ,
					 function = Right (LocalReference (PointerType 
					{pointerReferent = FunctionType 
						{resultType = VoidType ,
							 argumentTypes = [PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 64
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 64
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 64
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								}] ,
							 isVarArg = False
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnId")) ,
					 arguments = [(LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "Base_Arg") ,
					[]) ,
					(LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnIe") ,
					[]) ,
					(LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "Hp_Arg") ,
					[]) ,
					(LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "lnIf") ,
					[]) ,
					(ConstantOperand (Undef 
					{constantType = IntegerType 
						{typeBits = 64
							}
						}) ,
					[]) ,
					(ConstantOperand (Undef 
					{constantType = IntegerType 
						{typeBits = 64
							}
						}) ,
					[]) ,
					(ConstantOperand (Undef 
					{constantType = IntegerType 
						{typeBits = 64
							}
						}) ,
					[]) ,
					(ConstantOperand (Undef 
					{constantType = IntegerType 
						{typeBits = 64
							}
						}) ,
					[]) ,
					(ConstantOperand (Undef 
					{constantType = IntegerType 
						{typeBits = 64
							}
						}) ,
					[]) ,
					(LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "SpLim_Arg") ,
					[])] ,
					 functionAttributes = [Left (GroupID 0)] ,
					 metadata = []
					})] (Do (Ret 
				{returnOperand = Nothing ,
					 metadata' = []
					})) ,
				BasicBlock (Name "cHu") [Name "lnIg" := Load 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lrgc") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "R1_Var") ,
					 value = LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "lnIg") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "lnIh" := GetElementPtr 
				{inBounds = True ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "Base_Arg") ,
					 indices = [ConstantOperand (Int 
					{integerBits = 32 ,
						 integerValue = 4294967294
						})] ,
					 metadata = []
					} ,
				Name "lnIi" := BitCast 
				{operand0 = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnIh") ,
					 type' = PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						} ,
					 metadata = []
					} ,
				Name "lnIj" := Load 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnIi") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = [("tbaa" ,
					MDRef (MetadataNodeID 2))]
					} ,
				Name "lnIk" := IntToPtr 
				{operand0 = LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "lnIj") ,
					 type' = PointerType 
					{pointerReferent = FunctionType 
						{resultType = VoidType ,
							 argumentTypes = [PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 64
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 64
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 64
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								}] ,
							 isVarArg = False
							} ,
						 pointerAddrSpace = AddrSpace 0
						} ,
					 metadata = []
					} ,
				Name "lnIl" := Load 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = PointerType 
						{pointerReferent = IntegerType 
							{typeBits = 64
								} ,
							 pointerAddrSpace = AddrSpace 0
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "Sp_Var") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Name "lnIm" := Load 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "R1_Var") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Call 
				{tailCallKind = Just Tail ,
					 callingConvention = GHC ,
					 returnAttributes = [] ,
					 function = Right (LocalReference (PointerType 
					{pointerReferent = FunctionType 
						{resultType = VoidType ,
							 argumentTypes = [PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 64
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 64
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 64
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								}] ,
							 isVarArg = False
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnIk")) ,
					 arguments = [(LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "Base_Arg") ,
					[]) ,
					(LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnIl") ,
					[]) ,
					(LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "Hp_Arg") ,
					[]) ,
					(LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "lnIm") ,
					[]) ,
					(ConstantOperand (Undef 
					{constantType = IntegerType 
						{typeBits = 64
							}
						}) ,
					[]) ,
					(ConstantOperand (Undef 
					{constantType = IntegerType 
						{typeBits = 64
							}
						}) ,
					[]) ,
					(ConstantOperand (Undef 
					{constantType = IntegerType 
						{typeBits = 64
							}
						}) ,
					[]) ,
					(ConstantOperand (Undef 
					{constantType = IntegerType 
						{typeBits = 64
							}
						}) ,
					[]) ,
					(ConstantOperand (Undef 
					{constantType = IntegerType 
						{typeBits = 64
							}
						}) ,
					[]) ,
					(LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "SpLim_Arg") ,
					[])] ,
					 functionAttributes = [Left (GroupID 0)] ,
					 metadata = []
					})] (Do (Ret 
				{returnOperand = Nothing ,
					 metadata' = []
					}))] ,
				 personalityFunction = Nothing ,
				 metadata = []
				}) ,
			GlobalDefinition (Function 
			{linkage = External ,
				 visibility = Default ,
				 dllStorageClass = Nothing ,
				 callingConvention = C ,
				 returnAttributes = [] ,
				 returnType = IntegerType 
				{typeBits = 1
					} ,
				 name = Name "llvm.expect.i1" ,
				 parameters = ([Parameter (IntegerType 
				{typeBits = 1
					}) (UnName 0) [] ,
				Parameter (IntegerType 
				{typeBits = 1
					}) (UnName 1) []] ,
				False) ,
				 functionAttributes = [Left (GroupID 1)] ,
				 section = Nothing ,
				 comdat = Nothing ,
				 alignment = 0 ,
				 garbageCollectorName = Nothing ,
				 prefix = Nothing ,
				 basicBlocks = [] ,
				 personalityFunction = Nothing ,
				 metadata = []
				}) ,
			GlobalDefinition (Function 
			{linkage = External ,
				 visibility = Default ,
				 dllStorageClass = Nothing ,
				 callingConvention = GHC ,
				 returnAttributes = [] ,
				 returnType = VoidType ,
				 name = Name "ZCMain_main_info$def" ,
				 parameters = ([Parameter (PointerType 
				{pointerReferent = IntegerType 
					{typeBits = 64
						} ,
					 pointerAddrSpace = AddrSpace 0
					}) (Name "Base_Arg") [NoAlias ,
				NoCapture] ,
				Parameter (PointerType 
				{pointerReferent = IntegerType 
					{typeBits = 64
						} ,
					 pointerAddrSpace = AddrSpace 0
					}) (Name "Sp_Arg") [NoAlias ,
				NoCapture] ,
				Parameter (PointerType 
				{pointerReferent = IntegerType 
					{typeBits = 64
						} ,
					 pointerAddrSpace = AddrSpace 0
					}) (Name "Hp_Arg") [NoAlias ,
				NoCapture] ,
				Parameter (IntegerType 
				{typeBits = 64
					}) (Name "R1_Arg") [] ,
				Parameter (IntegerType 
				{typeBits = 64
					}) (Name "R2_Arg") [] ,
				Parameter (IntegerType 
				{typeBits = 64
					}) (Name "R3_Arg") [] ,
				Parameter (IntegerType 
				{typeBits = 64
					}) (Name "R4_Arg") [] ,
				Parameter (IntegerType 
				{typeBits = 64
					}) (Name "R5_Arg") [] ,
				Parameter (IntegerType 
				{typeBits = 64
					}) (Name "R6_Arg") [] ,
				Parameter (IntegerType 
				{typeBits = 64
					}) (Name "SpLim_Arg") []] ,
				False) ,
				 functionAttributes = [Left (GroupID 0)] ,
				 section = Nothing ,
				 comdat = Nothing ,
				 alignment = 8 ,
				 garbageCollectorName = Nothing ,
				 prefix = Just (Struct 
				{structName = Nothing ,
					 isPacked = True ,
					 memberValues = [Int 
					{integerBits = 64 ,
						 integerValue = 0
						} ,
					Int 
					{integerBits = 32 ,
						 integerValue = 21
						} ,
					Trunc 
					{operand0 = Sub 
						{nsw = False ,
							 nuw = False ,
							 operand0 = PtrToInt 
							{operand0 = GlobalReference (PointerType 
								{pointerReferent = NamedTypeReference (Name "_uIw_srt_struct") ,
									 pointerAddrSpace = AddrSpace 0
									}) (Name "_uIw_srt$def") ,
								 type' = IntegerType 
								{typeBits = 64
									}
								} ,
							 operand1 = PtrToInt 
							{operand0 = GlobalReference (PointerType 
								{pointerReferent = FunctionType 
									{resultType = VoidType ,
										 argumentTypes = [PointerType 
										{pointerReferent = IntegerType 
											{typeBits = 64
												} ,
											 pointerAddrSpace = AddrSpace 0
											} ,
										PointerType 
										{pointerReferent = IntegerType 
											{typeBits = 64
												} ,
											 pointerAddrSpace = AddrSpace 0
											} ,
										PointerType 
										{pointerReferent = IntegerType 
											{typeBits = 64
												} ,
											 pointerAddrSpace = AddrSpace 0
											} ,
										IntegerType 
										{typeBits = 64
											} ,
										IntegerType 
										{typeBits = 64
											} ,
										IntegerType 
										{typeBits = 64
											} ,
										IntegerType 
										{typeBits = 64
											} ,
										IntegerType 
										{typeBits = 64
											} ,
										IntegerType 
										{typeBits = 64
											} ,
										IntegerType 
										{typeBits = 64
											}] ,
										 isVarArg = False
										} ,
									 pointerAddrSpace = AddrSpace 0
									}) (Name "ZCMain_main_info$def") ,
								 type' = IntegerType 
								{typeBits = 64
									}
								}
							} ,
						 type' = IntegerType 
						{typeBits = 32
							}
						}]
					}) ,
				 basicBlocks = [BasicBlock (Name "nIx") [Name "l01D" := Alloca 
				{allocatedType = IntegerType 
					{typeBits = 64
						} ,
					 numElements = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Name "R3_Var" := Alloca 
				{allocatedType = IntegerType 
					{typeBits = 64
						} ,
					 numElements = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "R3_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = IntegerType 
						{typeBits = 64
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "R4_Var" := Alloca 
				{allocatedType = IntegerType 
					{typeBits = 64
						} ,
					 numElements = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "R4_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = IntegerType 
						{typeBits = 64
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "R5_Var" := Alloca 
				{allocatedType = IntegerType 
					{typeBits = 64
						} ,
					 numElements = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "R5_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = IntegerType 
						{typeBits = 64
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "R6_Var" := Alloca 
				{allocatedType = IntegerType 
					{typeBits = 64
						} ,
					 numElements = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "R6_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = IntegerType 
						{typeBits = 64
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "F1_Var" := Alloca 
				{allocatedType = FloatingPointType 
					{floatingPointType = FloatFP
						} ,
					 numElements = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = FloatFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "F1_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = FloatFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "D1_Var" := Alloca 
				{allocatedType = FloatingPointType 
					{floatingPointType = DoubleFP
						} ,
					 numElements = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = DoubleFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "D1_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = DoubleFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "F2_Var" := Alloca 
				{allocatedType = FloatingPointType 
					{floatingPointType = FloatFP
						} ,
					 numElements = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = FloatFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "F2_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = FloatFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "D2_Var" := Alloca 
				{allocatedType = FloatingPointType 
					{floatingPointType = DoubleFP
						} ,
					 numElements = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = DoubleFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "D2_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = DoubleFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "F3_Var" := Alloca 
				{allocatedType = FloatingPointType 
					{floatingPointType = FloatFP
						} ,
					 numElements = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = FloatFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "F3_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = FloatFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "D3_Var" := Alloca 
				{allocatedType = FloatingPointType 
					{floatingPointType = DoubleFP
						} ,
					 numElements = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = DoubleFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "D3_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = DoubleFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "F4_Var" := Alloca 
				{allocatedType = FloatingPointType 
					{floatingPointType = FloatFP
						} ,
					 numElements = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = FloatFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "F4_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = FloatFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "D4_Var" := Alloca 
				{allocatedType = FloatingPointType 
					{floatingPointType = DoubleFP
						} ,
					 numElements = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = DoubleFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "D4_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = DoubleFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "F5_Var" := Alloca 
				{allocatedType = FloatingPointType 
					{floatingPointType = FloatFP
						} ,
					 numElements = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = FloatFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "F5_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = FloatFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "D5_Var" := Alloca 
				{allocatedType = FloatingPointType 
					{floatingPointType = DoubleFP
						} ,
					 numElements = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = DoubleFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "D5_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = DoubleFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "F6_Var" := Alloca 
				{allocatedType = FloatingPointType 
					{floatingPointType = FloatFP
						} ,
					 numElements = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = FloatFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "F6_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = FloatFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "D6_Var" := Alloca 
				{allocatedType = FloatingPointType 
					{floatingPointType = DoubleFP
						} ,
					 numElements = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = DoubleFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "D6_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = DoubleFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "lcIq" := Alloca 
				{allocatedType = IntegerType 
					{typeBits = 64
						} ,
					 numElements = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Name "R2_Var" := Alloca 
				{allocatedType = IntegerType 
					{typeBits = 64
						} ,
					 numElements = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "R2_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = IntegerType 
						{typeBits = 64
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "R1_Var" := Alloca 
				{allocatedType = IntegerType 
					{typeBits = 64
						} ,
					 numElements = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "R1_Var") ,
					 value = LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "R1_Arg") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "Sp_Var" := Alloca 
				{allocatedType = PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						} ,
					 numElements = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = PointerType 
						{pointerReferent = IntegerType 
							{typeBits = 64
								} ,
							 pointerAddrSpace = AddrSpace 0
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "Sp_Var") ,
					 value = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "Sp_Arg") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					})] (Do (Br 
				{dest = Name "cIt" ,
					 metadata' = []
					})) ,
				BasicBlock (Name "cIt") [Name "lnIy" := Load 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "R1_Var") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "l01D") ,
					 value = LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "lnIy") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "lnIz" := Load 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = PointerType 
						{pointerReferent = IntegerType 
							{typeBits = 64
								} ,
							 pointerAddrSpace = AddrSpace 0
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "Sp_Var") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Name "lnIA" := GetElementPtr 
				{inBounds = True ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnIz") ,
					 indices = [ConstantOperand (Int 
					{integerBits = 32 ,
						 integerValue = 1
						})] ,
					 metadata = []
					} ,
				Name "lnIB" := PtrToInt 
				{operand0 = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnIA") ,
					 type' = IntegerType 
					{typeBits = 64
						} ,
					 metadata = []
					} ,
				Name "lnIC" := Sub 
				{nsw = False ,
					 nuw = False ,
					 operand0 = LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "lnIB") ,
					 operand1 = ConstantOperand (Int 
					{integerBits = 64 ,
						 integerValue = 24
						}) ,
					 metadata = []
					} ,
				Name "lnID" := ICmp 
				{iPredicate = ULT ,
					 operand0 = LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "lnIC") ,
					 operand1 = LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "SpLim_Arg") ,
					 metadata = []
					} ,
				Name "lnIE" := Call 
				{tailCallKind = Nothing ,
					 callingConvention = C ,
					 returnAttributes = [] ,
					 function = Right (ConstantOperand (GlobalReference (PointerType 
					{pointerReferent = FunctionType 
						{resultType = IntegerType 
							{typeBits = 1
								} ,
							 argumentTypes = [IntegerType 
							{typeBits = 1
								} ,
							IntegerType 
							{typeBits = 1
								}] ,
							 isVarArg = False
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "llvm.expect.i1"))) ,
					 arguments = [(LocalReference (IntegerType 
					{typeBits = 1
						}) (Name "lnID") ,
					[]) ,
					(ConstantOperand (Int 
					{integerBits = 1 ,
						 integerValue = 0
						}) ,
					[])] ,
					 functionAttributes = [] ,
					 metadata = []
					}] (Do (CondBr 
				{condition = LocalReference (IntegerType 
					{typeBits = 1
						}) (Name "lnIE") ,
					 trueDest = Name "cIu" ,
					 falseDest = Name "cIv" ,
					 metadata' = []
					})) ,
				BasicBlock (Name "cIv") [Name "lnIF" := PtrToInt 
				{operand0 = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "Base_Arg") ,
					 type' = IntegerType 
					{typeBits = 64
						} ,
					 metadata = []
					} ,
				Name "lnIG" := IntToPtr 
				{operand0 = LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "lnIF") ,
					 type' = PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 8
							} ,
						 pointerAddrSpace = AddrSpace 0
						} ,
					 metadata = []
					} ,
				Name "lnIH" := Load 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "l01D") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Name "lnII" := IntToPtr 
				{operand0 = LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "lnIH") ,
					 type' = PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 8
							} ,
						 pointerAddrSpace = AddrSpace 0
						} ,
					 metadata = []
					} ,
				Name "lnIJ" := BitCast 
				{operand0 = ConstantOperand (GlobalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 8
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "newCAF")) ,
					 type' = PointerType 
					{pointerReferent = FunctionType 
						{resultType = PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 8
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							 argumentTypes = [PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 8
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 8
									} ,
								 pointerAddrSpace = AddrSpace 0
								}] ,
							 isVarArg = False
							} ,
						 pointerAddrSpace = AddrSpace 0
						} ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "R3_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = IntegerType 
						{typeBits = 64
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "R4_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = IntegerType 
						{typeBits = 64
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "R5_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = IntegerType 
						{typeBits = 64
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "R6_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = IntegerType 
						{typeBits = 64
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = FloatFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "F1_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = FloatFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = DoubleFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "D1_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = DoubleFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = FloatFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "F2_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = FloatFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = DoubleFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "D2_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = DoubleFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = FloatFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "F3_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = FloatFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = DoubleFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "D3_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = DoubleFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = FloatFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "F4_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = FloatFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = DoubleFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "D4_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = DoubleFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = FloatFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "F5_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = FloatFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = DoubleFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "D5_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = DoubleFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = FloatFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "F6_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = FloatFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = FloatingPointType 
						{floatingPointType = DoubleFP
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "D6_Var") ,
					 value = ConstantOperand (Undef 
					{constantType = FloatingPointType 
						{floatingPointType = DoubleFP
							}
						}) ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "lnIK" := Call 
				{tailCallKind = Nothing ,
					 callingConvention = C ,
					 returnAttributes = [] ,
					 function = Right (LocalReference (PointerType 
					{pointerReferent = FunctionType 
						{resultType = PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 8
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							 argumentTypes = [PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 8
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 8
									} ,
								 pointerAddrSpace = AddrSpace 0
								}] ,
							 isVarArg = False
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnIJ")) ,
					 arguments = [(LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 8
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnIG") ,
					[]) ,
					(LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 8
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnII") ,
					[])] ,
					 functionAttributes = [Left (GroupID 0)] ,
					 metadata = []
					} ,
				Name "lnIL" := PtrToInt 
				{operand0 = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 8
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnIK") ,
					 type' = IntegerType 
					{typeBits = 64
						} ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lcIq") ,
					 value = LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "lnIL") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "lnIM" := Load 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lcIq") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Name "lnIN" := ICmp 
				{iPredicate = EQ ,
					 operand0 = LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "lnIM") ,
					 operand1 = ConstantOperand (Int 
					{integerBits = 64 ,
						 integerValue = 0
						}) ,
					 metadata = []
					}] (Do (CondBr 
				{condition = LocalReference (IntegerType 
					{typeBits = 1
						}) (Name "lnIN") ,
					 trueDest = Name "cIs" ,
					 falseDest = Name "cIr" ,
					 metadata' = []
					})) ,
				BasicBlock (Name "cIr") [Name "lnIP" := PtrToInt 
				{operand0 = ConstantOperand (GlobalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 8
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "stg_bh_upd_frame_info")) ,
					 type' = IntegerType 
					{typeBits = 64
						} ,
					 metadata = []
					} ,
				Name "lnIO" := Load 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = PointerType 
						{pointerReferent = IntegerType 
							{typeBits = 64
								} ,
							 pointerAddrSpace = AddrSpace 0
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "Sp_Var") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Name "lnIQ" := GetElementPtr 
				{inBounds = True ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnIO") ,
					 indices = [ConstantOperand (Int 
					{integerBits = 32 ,
						 integerValue = 4294967294
						})] ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnIQ") ,
					 value = LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "lnIP") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = [("tbaa" ,
					MDRef (MetadataNodeID 0))]
					}) ,
				Name "lnIS" := Load 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lcIq") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Name "lnIR" := Load 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = PointerType 
						{pointerReferent = IntegerType 
							{typeBits = 64
								} ,
							 pointerAddrSpace = AddrSpace 0
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "Sp_Var") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Name "lnIT" := GetElementPtr 
				{inBounds = True ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnIR") ,
					 indices = [ConstantOperand (Int 
					{integerBits = 32 ,
						 integerValue = 4294967295
						})] ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnIT") ,
					 value = LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "lnIS") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = [("tbaa" ,
					MDRef (MetadataNodeID 0))]
					}) ,
				Name "lnIU" := PtrToInt 
				{operand0 = ConstantOperand (GlobalReference (PointerType 
					{pointerReferent = NamedTypeReference (Name "Main_main_closure_struct") ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "Main_main_closure$def")) ,
					 type' = IntegerType 
					{typeBits = 64
						} ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "R2_Var") ,
					 value = LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "lnIU") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "lnIV" := PtrToInt 
				{operand0 = ConstantOperand (GlobalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 8
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "base_GHCziTopHandler_runMainIO_closure")) ,
					 type' = IntegerType 
					{typeBits = 64
						} ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "R1_Var") ,
					 value = LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "lnIV") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "lnIW" := Load 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = PointerType 
						{pointerReferent = IntegerType 
							{typeBits = 64
								} ,
							 pointerAddrSpace = AddrSpace 0
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "Sp_Var") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Name "lnIX" := GetElementPtr 
				{inBounds = True ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnIW") ,
					 indices = [ConstantOperand (Int 
					{integerBits = 32 ,
						 integerValue = 4294967294
						})] ,
					 metadata = []
					} ,
				Name "lnIY" := PtrToInt 
				{operand0 = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnIX") ,
					 type' = IntegerType 
					{typeBits = 64
						} ,
					 metadata = []
					} ,
				Name "lnIZ" := IntToPtr 
				{operand0 = LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "lnIY") ,
					 type' = PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						} ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = PointerType 
						{pointerReferent = IntegerType 
							{typeBits = 64
								} ,
							 pointerAddrSpace = AddrSpace 0
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "Sp_Var") ,
					 value = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnIZ") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "lnJ0" := BitCast 
				{operand0 = ConstantOperand (GlobalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 8
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "stg_ap_p_fast")) ,
					 type' = PointerType 
					{pointerReferent = FunctionType 
						{resultType = VoidType ,
							 argumentTypes = [PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 64
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 64
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 64
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								}] ,
							 isVarArg = False
							} ,
						 pointerAddrSpace = AddrSpace 0
						} ,
					 metadata = []
					} ,
				Name "lnJ1" := Load 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = PointerType 
						{pointerReferent = IntegerType 
							{typeBits = 64
								} ,
							 pointerAddrSpace = AddrSpace 0
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "Sp_Var") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Name "lnJ2" := Load 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "R1_Var") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Name "lnJ3" := Load 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "R2_Var") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Call 
				{tailCallKind = Just Tail ,
					 callingConvention = GHC ,
					 returnAttributes = [] ,
					 function = Right (LocalReference (PointerType 
					{pointerReferent = FunctionType 
						{resultType = VoidType ,
							 argumentTypes = [PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 64
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 64
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 64
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								}] ,
							 isVarArg = False
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnJ0")) ,
					 arguments = [(LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "Base_Arg") ,
					[]) ,
					(LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnJ1") ,
					[]) ,
					(LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "Hp_Arg") ,
					[]) ,
					(LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "lnJ2") ,
					[]) ,
					(LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "lnJ3") ,
					[]) ,
					(ConstantOperand (Undef 
					{constantType = IntegerType 
						{typeBits = 64
							}
						}) ,
					[]) ,
					(ConstantOperand (Undef 
					{constantType = IntegerType 
						{typeBits = 64
							}
						}) ,
					[]) ,
					(ConstantOperand (Undef 
					{constantType = IntegerType 
						{typeBits = 64
							}
						}) ,
					[]) ,
					(ConstantOperand (Undef 
					{constantType = IntegerType 
						{typeBits = 64
							}
						}) ,
					[]) ,
					(LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "SpLim_Arg") ,
					[])] ,
					 functionAttributes = [Left (GroupID 0)] ,
					 metadata = []
					})] (Do (Ret 
				{returnOperand = Nothing ,
					 metadata' = []
					})) ,
				BasicBlock (Name "cIs") [Name "lnJ4" := Load 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "l01D") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Name "lnJ5" := IntToPtr 
				{operand0 = LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "lnJ4") ,
					 type' = PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						} ,
					 metadata = []
					} ,
				Name "lnJ6" := Load 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnJ5") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = [("tbaa" ,
					MDRef (MetadataNodeID 1))]
					} ,
				Name "lnJ7" := IntToPtr 
				{operand0 = LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "lnJ6") ,
					 type' = PointerType 
					{pointerReferent = FunctionType 
						{resultType = VoidType ,
							 argumentTypes = [PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 64
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 64
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 64
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								}] ,
							 isVarArg = False
							} ,
						 pointerAddrSpace = AddrSpace 0
						} ,
					 metadata = []
					} ,
				Name "lnJ8" := Load 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = PointerType 
						{pointerReferent = IntegerType 
							{typeBits = 64
								} ,
							 pointerAddrSpace = AddrSpace 0
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "Sp_Var") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Name "lnJ9" := Load 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "R1_Var") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Call 
				{tailCallKind = Just Tail ,
					 callingConvention = GHC ,
					 returnAttributes = [] ,
					 function = Right (LocalReference (PointerType 
					{pointerReferent = FunctionType 
						{resultType = VoidType ,
							 argumentTypes = [PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 64
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 64
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 64
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								}] ,
							 isVarArg = False
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnJ7")) ,
					 arguments = [(LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "Base_Arg") ,
					[]) ,
					(LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnJ8") ,
					[]) ,
					(LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "Hp_Arg") ,
					[]) ,
					(LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "lnJ9") ,
					[]) ,
					(ConstantOperand (Undef 
					{constantType = IntegerType 
						{typeBits = 64
							}
						}) ,
					[]) ,
					(ConstantOperand (Undef 
					{constantType = IntegerType 
						{typeBits = 64
							}
						}) ,
					[]) ,
					(ConstantOperand (Undef 
					{constantType = IntegerType 
						{typeBits = 64
							}
						}) ,
					[]) ,
					(ConstantOperand (Undef 
					{constantType = IntegerType 
						{typeBits = 64
							}
						}) ,
					[]) ,
					(ConstantOperand (Undef 
					{constantType = IntegerType 
						{typeBits = 64
							}
						}) ,
					[]) ,
					(LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "SpLim_Arg") ,
					[])] ,
					 functionAttributes = [Left (GroupID 0)] ,
					 metadata = []
					})] (Do (Ret 
				{returnOperand = Nothing ,
					 metadata' = []
					})) ,
				BasicBlock (Name "cIu") [Name "lnJa" := Load 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "l01D") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Store 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "R1_Var") ,
					 value = LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "lnJa") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					}) ,
				Name "lnJb" := GetElementPtr 
				{inBounds = True ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "Base_Arg") ,
					 indices = [ConstantOperand (Int 
					{integerBits = 32 ,
						 integerValue = 4294967294
						})] ,
					 metadata = []
					} ,
				Name "lnJc" := BitCast 
				{operand0 = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnJb") ,
					 type' = PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						} ,
					 metadata = []
					} ,
				Name "lnJd" := Load 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnJc") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = [("tbaa" ,
					MDRef (MetadataNodeID 2))]
					} ,
				Name "lnJe" := IntToPtr 
				{operand0 = LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "lnJd") ,
					 type' = PointerType 
					{pointerReferent = FunctionType 
						{resultType = VoidType ,
							 argumentTypes = [PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 64
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 64
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 64
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								}] ,
							 isVarArg = False
							} ,
						 pointerAddrSpace = AddrSpace 0
						} ,
					 metadata = []
					} ,
				Name "lnJf" := Load 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = PointerType 
						{pointerReferent = IntegerType 
							{typeBits = 64
								} ,
							 pointerAddrSpace = AddrSpace 0
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "Sp_Var") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Name "lnJg" := Load 
				{volatile = False ,
					 address = LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "R1_Var") ,
					 maybeAtomicity = Nothing ,
					 alignment = 0 ,
					 metadata = []
					} ,
				Do (Call 
				{tailCallKind = Just Tail ,
					 callingConvention = GHC ,
					 returnAttributes = [] ,
					 function = Right (LocalReference (PointerType 
					{pointerReferent = FunctionType 
						{resultType = VoidType ,
							 argumentTypes = [PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 64
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 64
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							PointerType 
							{pointerReferent = IntegerType 
								{typeBits = 64
									} ,
								 pointerAddrSpace = AddrSpace 0
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								} ,
							IntegerType 
							{typeBits = 64
								}] ,
							 isVarArg = False
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnJe")) ,
					 arguments = [(LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "Base_Arg") ,
					[]) ,
					(LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "lnJf") ,
					[]) ,
					(LocalReference (PointerType 
					{pointerReferent = IntegerType 
						{typeBits = 64
							} ,
						 pointerAddrSpace = AddrSpace 0
						}) (Name "Hp_Arg") ,
					[]) ,
					(LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "lnJg") ,
					[]) ,
					(ConstantOperand (Undef 
					{constantType = IntegerType 
						{typeBits = 64
							}
						}) ,
					[]) ,
					(ConstantOperand (Undef 
					{constantType = IntegerType 
						{typeBits = 64
							}
						}) ,
					[]) ,
					(ConstantOperand (Undef 
					{constantType = IntegerType 
						{typeBits = 64
							}
						}) ,
					[]) ,
					(ConstantOperand (Undef 
					{constantType = IntegerType 
						{typeBits = 64
							}
						}) ,
					[]) ,
					(ConstantOperand (Undef 
					{constantType = IntegerType 
						{typeBits = 64
							}
						}) ,
					[]) ,
					(LocalReference (IntegerType 
					{typeBits = 64
						}) (Name "SpLim_Arg") ,
					[])] ,
					 functionAttributes = [Left (GroupID 0)] ,
					 metadata = []
					})] (Do (Ret 
				{returnOperand = Nothing ,
					 metadata' = []
					}))] ,
				 personalityFunction = Nothing ,
				 metadata = []
				}) ,
			MetadataNodeDefinition (MetadataNodeID 0) (MDTuple [Just (MDNode (MDRef (MetadataNodeID 3))) ,
			Just (MDNode (MDRef (MetadataNodeID 3))) ,
			Just (MDValue (ConstantOperand (Int 
			{integerBits = 64 ,
				 integerValue = 0
				})))]) ,
			MetadataNodeDefinition (MetadataNodeID 1) (MDTuple [Just (MDNode (MDRef (MetadataNodeID 4))) ,
			Just (MDNode (MDRef (MetadataNodeID 4))) ,
			Just (MDValue (ConstantOperand (Int 
			{integerBits = 64 ,
				 integerValue = 0
				})))]) ,
			MetadataNodeDefinition (MetadataNodeID 2) (MDTuple [Just (MDNode (MDRef (MetadataNodeID 5))) ,
			Just (MDNode (MDRef (MetadataNodeID 5))) ,
			Just (MDValue (ConstantOperand (Int 
			{integerBits = 64 ,
				 integerValue = 0
				})))]) ,
			MetadataNodeDefinition (MetadataNodeID 3) (MDTuple [Just (MDString "stack") ,
			Just (MDNode (MDRef (MetadataNodeID 4)))]) ,
			MetadataNodeDefinition (MetadataNodeID 4) (MDTuple [Just (MDString "top") ,
			Just (MDNode (MDRef (MetadataNodeID 6)))]) ,
			MetadataNodeDefinition (MetadataNodeID 5) (MDTuple [Just (MDString "base") ,
			Just (MDNode (MDRef (MetadataNodeID 4)))]) ,
			MetadataNodeDefinition (MetadataNodeID 6) (MDTuple [Just (MDString "root")]) ,
			FunctionAttributes (GroupID 1) [NoUnwind ,
			ReadNone] ,
			FunctionAttributes (GroupID 0) [NoUnwind]]
			}