Module {moduleName = "<string>", moduleSourceFileName = "assignedOne.c", moduleDataLayout = Just (DataLayout {endianness = LittleEndian, mangling = Just ELFMangling, stackAlignment = Just 128, pointerLayouts = fromList [(AddrSpace 0,(64,AlignmentInfo {abiAlignment = 64, preferredAlignment = 64}))], typeLayouts = fromList [((IntegerAlign,1),AlignmentInfo {abiAlignment = 8, preferredAlignment = 8}),((IntegerAlign,8),AlignmentInfo {abiAlignment = 8, preferredAlignment = 8}),((IntegerAlign,16),AlignmentInfo {abiAlignment = 16, preferredAlignment = 16}),((IntegerAlign,32),AlignmentInfo {abiAlignment = 32, preferredAlignment = 32}),((IntegerAlign,64),AlignmentInfo {abiAlignment = 64, preferredAlignment = 64}),((VectorAlign,64),AlignmentInfo {abiAlignment = 64, preferredAlignment = 64}),((VectorAlign,128),AlignmentInfo {abiAlignment = 128, preferredAlignment = 128}),((FloatAlign,16),AlignmentInfo {abiAlignment = 16, preferredAlignment = 16}),((FloatAlign,32),AlignmentInfo {abiAlignment = 32, preferredAlignment = 32}),((FloatAlign,64),AlignmentInfo {abiAlignment = 64, preferredAlignment = 64}),((FloatAlign,80),AlignmentInfo {abiAlignment = 128, preferredAlignment = 128}),((FloatAlign,128),AlignmentInfo {abiAlignment = 128, preferredAlignment = 128})], aggregateLayout = AlignmentInfo {abiAlignment = 0, preferredAlignment = 64}, nativeSizes = Just (fromList [8,16,32,64])}), moduleTargetTriple = Just "x86_64-pc-linux-gnu", moduleDefinitions = [GlobalDefinition (Function {linkage = External, visibility = Default, dllStorageClass = Nothing, callingConvention = C, returnAttributes = [], returnType = IntegerType {typeBits = 32}, name = Name "main", parameters = ([],False), functionAttributes = [Left (GroupID 0)], section = Nothing, comdat = Nothing, alignment = 0, garbageCollectorName = Nothing, prefix = Nothing, basicBlocks = [BasicBlock (UnName 0) [Name "y1" := Alloca {allocatedType = IntegerType {typeBits = 32}, numElements = Nothing, alignment = 4, metadata = []},Name "y2" := Alloca {allocatedType = IntegerType {typeBits = 32}, numElements = Nothing, alignment = 4, metadata = []},Name "y3" := Alloca {allocatedType = IntegerType {typeBits = 32}, numElements = Nothing, alignment = 4, metadata = []},Do (Store {volatile = False, address = LocalReference (PointerType {pointerReferent = IntegerType {typeBits = 32}, pointerAddrSpace = AddrSpace 0}) (Name "y2"), value = ConstantOperand (Int {integerBits = 32, integerValue = 0}), maybeAtomicity = Nothing, alignment = 4, metadata = []}),Name "y4" := Load {volatile = False, address = LocalReference (PointerType {pointerReferent = IntegerType {typeBits = 32}, pointerAddrSpace = AddrSpace 0}) (Name "y1"), maybeAtomicity = Nothing, alignment = 4, metadata = []},Do (Store {volatile = False, address = LocalReference (PointerType {pointerReferent = IntegerType {typeBits = 32}, pointerAddrSpace = AddrSpace 0}) (Name "y2"), value = LocalReference (IntegerType {typeBits = 32}) (Name "y4"), maybeAtomicity = Nothing, alignment = 4, metadata = []})] (Do (Ret {returnOperand = Just (ConstantOperand (Int {integerBits = 32, integerValue = 0})), metadata' = []}))], personalityFunction = Nothing, metadata = []}),NamedMetadataDefinition "llvm.module.flags" [MetadataNodeID 0],NamedMetadataDefinition "llvm.ident" [MetadataNodeID 1],MetadataNodeDefinition (MetadataNodeID 0) (MDTuple [Just (MDValue (ConstantOperand (Int {integerBits = 32, integerValue = 1}))),Just (MDString "wchar_size"),Just (MDValue (ConstantOperand (Int {integerBits = 32, integerValue = 4})))]),MetadataNodeDefinition (MetadataNodeID 1) (MDTuple [Just (MDString "clang version 9.0.0-2~ubuntu18.04.2 (tags/RELEASE_900/final)")]),FunctionAttributes (GroupID 0) [NoInline,NoUnwind,OptimizeNone,UWTable,StringAttribute {stringAttributeKind = "correctly-rounded-divide-sqrt-fp-math", stringAttributeValue = "false"},StringAttribute {stringAttributeKind = "disable-tail-calls", stringAttributeValue = "false"},StringAttribute {stringAttributeKind = "less-precise-fpmad", stringAttributeValue = "false"},StringAttribute {stringAttributeKind = "min-legal-vector-width", stringAttributeValue = "0"},StringAttribute {stringAttributeKind = "no-frame-pointer-elim", stringAttributeValue = "true"},StringAttribute {stringAttributeKind = "no-frame-pointer-elim-non-leaf", stringAttributeValue = ""},StringAttribute {stringAttributeKind = "no-infs-fp-math", stringAttributeValue = "false"},StringAttribute {stringAttributeKind = "no-jump-tables", stringAttributeValue = "false"},StringAttribute {stringAttributeKind = "no-nans-fp-math", stringAttributeValue = "false"},StringAttribute {stringAttributeKind = "no-signed-zeros-fp-math", stringAttributeValue = "false"},StringAttribute {stringAttributeKind = "no-trapping-math", stringAttributeValue = "false"},StringAttribute {stringAttributeKind = "stack-protector-buffer-size", stringAttributeValue = "8"},StringAttribute {stringAttributeKind = "target-cpu", stringAttributeValue = "x86-64"},StringAttribute {stringAttributeKind = "target-features", stringAttributeValue = "+cx8,+fxsr,+mmx,+sse,+sse2,+x87"},StringAttribute {stringAttributeKind = "unsafe-fp-math", stringAttributeValue = "false"},StringAttribute {stringAttributeKind = "use-soft-float", stringAttributeValue = "false"}]]}